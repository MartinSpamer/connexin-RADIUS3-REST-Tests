{
  "swagger": "2.0",
  "info": {
    "title": "Radius API",
    "description": "Connexin Radius API\n",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "http://radius-dev-v3.uk.cxn-network.net/api",
      "description": "Radius Development Server"
    }
  ],
  "tags": [
    {
      "name": "Accounting Entries",
      "description": "The Accounting Entries endpoint provides functionality related to reading User's Session Data"
    },
    {
      "name": "Admins",
      "description": "The Admin endpoint manages access to the RADIUS API"
    },
    {
      "name": "Audits",
      "description": "The Audit endpoint provide the ability to view historic changes across all other endpoints"
    },
    {
      "name": "Events",
      "description": "The Event endpoint provide the ability to view User Events"
    },
    {
      "name": "Event Types",
      "description": "The Event Types endpoint provide the ability to view the different Event Types a User account may experiance"
    },
    {
      "name": "NAS",
      "description": "The NAS endpoint manages Network Access Servers"
    },
    {
      "name": "RADIUS Attributes",
      "description": "The RADIUS Attributes endpoint allows the creation of custom RADIUS Attributes on a per user basis"
    },
    {
      "name": "Resellers",
      "description": "The Resellers endpoint provides the ability to manage RADIUS API resellers"
    },
    {
      "name": "Static IP Ranges",
      "description": "The Static IP Ranges endpoint provides the abilty to manage a Resellers Static IP Ranges"
    },
    {
      "name": "Statuses",
      "description": "The Static IP Ranges endpoint provides the abilty to manage a Resellers Statuses and the effect these Statuses have on Users"
    },
    {
      "name": "Transient Packages",
      "description": "The RADIUS Attributes endpoint allows the creation of temporary package changes on a per user basis"
    },
    {
      "name": "Users",
      "description": "The User endpoint provide the ability to manage RADIUS User accounts"
    },
    {
      "name": "Webhook Endpoints",
      "description": "The Webhook Endpoints endpoint provides the ability to manage webhook destination servers"
    },
    {
      "name": "Webhooks",
      "description": "The Webhooks endpoint provides the ability to view historic webhooks generated by events"
    }
  ],
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "paths": {
    "/accounting_entries": {
      "get": {
        "summary": "Returns a list of Accounting Entries",
        "tags": [
          "Accounting Entries"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "description": "The User Id to return Accounting Entries for",
            "example": 1
          },
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "deprecated": true,
            "description": "The RADIUS Username to return Accounting Entries for",
            "example": "ABCDEFGHIJKLMNOPQRST"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Accounting Entries Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "AccountingEntires": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountingEntry"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting_entries/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns an Accounting Entry by Id",
        "tags": [
          "Accounting Entries"
        ],
        "responses": {
          "200": {
            "description": "Ok - Accounting Entry Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "AccountingEntry": {
                      "$ref": "#/components/schemas/AccountingEntry"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins": {
      "get": {
        "summary": "Returns a list of Admins",
        "tags": [
          "Admins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Admins Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Admins": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an Admin",
        "tags": [
          "Admins"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Admin": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Admin Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Admin": {
                      "$ref": "#/components/schemas/Admin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns an Admin by Id",
        "tags": [
          "Admins"
        ],
        "responses": {
          "200": {
            "description": "Ok - Admin Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Admin": {
                      "$ref": "#/components/schemas/Admin"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an Admin",
        "tags": [
          "Admins"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Admin": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Admin Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Admin": {
                      "$ref": "#/components/schemas/Admin"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Admin",
        "tags": [
          "Admins"
        ],
        "responses": {
          "204": {
            "description": "No Content - Admin Deleted"
          }
        }
      }
    },
    "/audits": {
      "get": {
        "summary": "Returns a list of Audits",
        "tags": [
          "Audits"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "model",
            "schema": {
              "type": "string"
            },
            "description": "The Model Name to return Audit Log Entries for",
            "example": "user"
          },
          {
            "in": "query",
            "name": "entity_id",
            "schema": {
              "type": "integer"
            },
            "description": "The Record Id to return Audit Log Entires for",
            "example": 1
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "description": "The User Id to return Audit Log Entries for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Audits Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Audits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Audit"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audits/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Returns an Audit by Id",
        "tags": [
          "Audits"
        ],
        "responses": {
          "200": {
            "description": "Ok - Audit Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Audit": {
                      "$ref": "#/components/schemas/Audit"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Returns a list of Events",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "description": "The User Id to return Events for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Events Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns an Event by Id",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Ok - Event Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Event": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event_types": {
      "get": {
        "summary": "Returns a list of Event Types",
        "tags": [
          "Event Types"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Event Types Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventTypes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventType"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event_types/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns an Event Type by Id",
        "tags": [
          "Event Types"
        ],
        "responses": {
          "200": {
            "description": "Ok - Event Type Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "EventType": {
                      "$ref": "#/components/schemas/EventType"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/nas": {
      "get": {
        "summary": "Returns a list of NAS",
        "tags": [
          "NAS"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of NAS Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Nas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Nas"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a NAS",
        "tags": [
          "NAS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Nas": {
                    "$ref": "#/components/schemas/Nas"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - NAS Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Nas": {
                      "$ref": "#/components/schemas/Nas"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/nas/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a NAS by Id",
        "tags": [
          "NAS"
        ],
        "responses": {
          "200": {
            "description": "Ok - Nas Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Nas": {
                      "$ref": "#/components/schemas/Nas"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Nas",
        "tags": [
          "NAS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Nas": {
                    "$ref": "#/components/schemas/Nas"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Nas Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Nas": {
                      "$ref": "#/components/schemas/Nas"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Nas",
        "tags": [
          "NAS"
        ],
        "responses": {
          "204": {
            "description": "No Content - Nas Deleted"
          }
        }
      }
    },
    "/radius_attributes": {
      "get": {
        "summary": "Returns a list of RADIUS Attributes",
        "tags": [
          "RADIUS Attributes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "description": "The User Id to return Events for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of RADIUS Attributes Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RADIUS Attributes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RadiusAttribute"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a RADIUS Attribute",
        "tags": [
          "RADIUS Attributes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "RadiusAttribute": {
                    "$ref": "#/components/schemas/RadiusAttribute"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - RADIUS Attribute Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RadiusAttribute": {
                      "$ref": "#/components/schemas/RadiusAttribute"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/radius_attributes/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "summary": "Returns a RADIUS Attribute by Id",
        "tags": [
          "RADIUS Attributes"
        ],
        "responses": {
          "200": {
            "description": "Ok - RADIUS Attribute Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RadiusAttribute": {
                      "$ref": "#/components/schemas/RadiusAttribute"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a RadiusAttribute",
        "tags": [
          "RADIUS Attributes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "RadiusAttribute": {
                    "$ref": "#/components/schemas/RadiusAttribute"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - RADIUS Attribute Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RadiusAttribute": {
                      "$ref": "#/components/schemas/RadiusAttribute"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a RadiusAttribute",
        "tags": [
          "RADIUS Attributes"
        ],
        "responses": {
          "204": {
            "description": "No Content - RADIUS Attribute Deleted"
          }
        }
      }
    },
    "/resellers": {
      "get": {
        "summary": "Returns a list of Resellers",
        "tags": [
          "Resellers"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "deprecated": true,
            "description": "The name of the Reseller to return",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Resellers Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Resellers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reseller"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Reseller",
        "tags": [
          "Resellers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Reseller": {
                    "$ref": "#/components/schemas/Reseller"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Reseller Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Reseller": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resellers/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Reseller by Id",
        "tags": [
          "Resellers"
        ],
        "responses": {
          "200": {
            "description": "Ok - Reseller Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Reseller": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Reseller",
        "tags": [
          "Resellers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Reseller": {
                    "$ref": "#/components/schemas/Reseller"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Reseller Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Reseller": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Reseller",
        "tags": [
          "Resellers"
        ],
        "responses": {
          "204": {
            "description": "No Content - Reseller Deleted"
          }
        }
      }
    },
    "/static_ip_ranges": {
      "get": {
        "summary": "Returns a list of Static IP Ranges",
        "tags": [
          "Static IP Ranges"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reseller",
            "schema": {
              "type": "integer"
            },
            "description": "The Reseller Id to return Static IP Ranges for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Static IP Ranges Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "StaticIPRanges": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StaticIPRange"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Static IP Range",
        "tags": [
          "Static IP Ranges"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "StaticIPRange": {
                    "$ref": "#/components/schemas/StaticIPRange"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Static IP Range Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "StaticIPRange": {
                      "$ref": "#/components/schemas/StaticIPRange"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/static_ip_ranges/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Static IP Range by Id",
        "tags": [
          "Static IP Ranges"
        ],
        "responses": {
          "200": {
            "description": "Ok - Static IP Range Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "StaticIPRange": {
                      "$ref": "#/components/schemas/StaticIPRange"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Static IP Range",
        "tags": [
          "Static IP Ranges"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "StaticIPRange": {
                    "$ref": "#/components/schemas/StaticIPRange"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Static IP Range Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "StaticIPRange": {
                      "$ref": "#/components/schemas/StaticIPRange"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Static IP Range",
        "tags": [
          "Static IP Ranges"
        ],
        "responses": {
          "204": {
            "description": "No Content - Static IP Range Deleted"
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "summary": "Returns a list of Statuses",
        "tags": [
          "Statuses"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reseller",
            "schema": {
              "type": "integer"
            },
            "description": "The Reseller Id to return Statuses for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Statuses Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Statuses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Status"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Status",
        "tags": [
          "Statuses"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Status": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Status Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statuses/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Status by Id",
        "tags": [
          "Statuses"
        ],
        "responses": {
          "200": {
            "description": "Ok - Status Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Status",
        "tags": [
          "Statuses"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Status": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Status Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Status",
        "tags": [
          "Statuses"
        ],
        "responses": {
          "204": {
            "description": "No Content - Status Deleted"
          }
        }
      }
    },
    "/transient_packages": {
      "get": {
        "summary": "Returns a list of Transient Packages",
        "tags": [
          "Transient Packages"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer"
            },
            "description": "The User Id to return Transient Packages for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Transient Packages Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Transient Packages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TransientPackage"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Transient Package",
        "tags": [
          "Transient Packages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Transient Package": {
                    "$ref": "#/components/schemas/TransientPackage"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Transient Package Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Transient Package": {
                      "$ref": "#/components/schemas/TransientPackage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transient_packages/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Transient Package by Id",
        "tags": [
          "Transient Packages"
        ],
        "responses": {
          "200": {
            "description": "Ok - Transient Package Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Transient Package": {
                      "$ref": "#/components/schemas/TransientPackage"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Transient Package",
        "tags": [
          "Transient Packages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Transient Package": {
                    "$ref": "#/components/schemas/TransientPackage"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Transient Package Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Transient Package": {
                      "$ref": "#/components/schemas/TransientPackage"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Transient Package",
        "tags": [
          "Transient Packages"
        ],
        "responses": {
          "204": {
            "description": "No Content - Transient Package Deleted"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Returns a list of Users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reseller",
            "schema": {
              "type": "integer"
            },
            "description": "The Reseller Id to return Users for",
            "example": 1
          },
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "deprecated": true,
            "style": "form",
            "exmplode": false,
            "description": "A List of RADIUS Usernames to return Users for",
            "example": "ABCDEFGHIJKLMNOPQRST,UVWXYZABCDEFGHIJKLMN"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Users Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a User",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "User": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - User Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a User by Id",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - User Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a User",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "User": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - User Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a User",
        "tags": [
          "Users"
        ],
        "responses": {
          "204": {
            "description": "No Content - User Deleted"
          }
        }
      }
    },
    "/users/{id}/change_password": {
      "post": {
        "summary": "Generate and Apply a new Password to a User",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - Password Changed - New Password in Response Body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/generate_username": {
      "get": {
        "summary": "Generate an unused RADIUS Username that can be used to create a new User",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - Username Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Username": {
                      "type": "string",
                      "minLength": 20,
                      "maxLength": 20,
                      "description": "RADIUS Username",
                      "example": "ABCDEFGHIJKLMNOPQRST"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/disconnect": {
      "post": {
        "summary": "Disconnect all the User's current Active Sessions",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - Active Sessions queued for Disconnection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/static_ip": {
      "post": {
        "summary": "Assign a Static IP to a User",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - Static IP Assigned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Static IP from a User",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Ok - Static IP Removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "User": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook_endpoints": {
      "get": {
        "summary": "Returns a list of Webhook Endpoints",
        "tags": [
          "Webhook Endpoints"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reseller",
            "schema": {
              "type": "integer"
            },
            "description": "The Reseller Id to return Users for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Webhook Endpoints Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "WebhookEndpoints": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebhookEndpoint"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Webhook Endpoint",
        "tags": [
          "Webhook Endpoints"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "WebhookEndpoint": {
                    "$ref": "#/components/schemas/WebhookEndpoint"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Webhook Endpoint Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "WebhookEndpoint": {
                      "$ref": "#/components/schemas/WebhookEndpoint"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook_endpoints/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Webhook Endpoint by Id",
        "tags": [
          "Webhook Endpoints"
        ],
        "responses": {
          "200": {
            "description": "Ok - Webhook Endpoint Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "WebhookEndpoint": {
                      "$ref": "#/components/schemas/WebhookEndpoint"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Webhook Endpoint",
        "tags": [
          "Webhook Endpoints"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "WebhookEndpoint": {
                    "$ref": "#/components/schemas/WebhookEndpoint"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - Webhook Endpoint Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "WebhookEndpoint": {
                      "$ref": "#/components/schemas/WebhookEndpoint"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "Returns a list of Webhooks",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "webhook_endpoint",
            "schema": {
              "type": "integer"
            },
            "description": "The Webhook Endpoint Id to return Users for",
            "example": 1
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - List of Webhooks Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a Webhook by Id",
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "Ok - Webhook Returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Webhook": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "parameters": {
      "pageParam": {
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "description": "The page of results to return",
        "example": 1
      },
      "limitParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 25
        },
        "description": "The number of records to return per page",
        "example": 25
      }
    },
    "schemas": {
      "AccountingEntry": {
        "type": "object",
        "properties": {
          "radacctid": {
            "type": "integer",
            "readOnly": true
          },
          "acctsessionid": {
            "type": "integer",
            "readOnly": true
          },
          "acctuniqueid": {
            "type": "string",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true
          },
          "groupname": {
            "type": "string",
            "readOnly": true
          },
          "realm": {
            "type": "string",
            "readOnly": true
          },
          "nasipaddress": {
            "type": "string",
            "format": "ipv4",
            "readOnly": true
          },
          "nasportid": {
            "type": "string",
            "readOnly": true
          },
          "nasporttype": {
            "type": "string",
            "readOnly": true
          },
          "acctstarttime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "acctupdatetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "acctstoptime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "acctinterval": {
            "type": "integer",
            "readOnly": true
          },
          "acctsessiontime": {
            "type": "integer",
            "readOnly": true
          },
          "acctauthentic": {
            "type": "string",
            "readOnly": true
          },
          "connectinfo_start": {
            "type": "string",
            "readOnly": true
          },
          "connectinfo_stop": {
            "type": "string",
            "readOnly": true
          },
          "acctinputoctets": {
            "type": "integer",
            "readOnly": true
          },
          "acctoutputoctets": {
            "type": "integer",
            "readOnly": true
          },
          "calledstationid": {
            "type": "string",
            "readOnly": true
          },
          "callingstationid": {
            "type": "string",
            "readOnly": true
          },
          "acctterminatecause": {
            "type": "string",
            "readOnly": true
          },
          "servicetype": {
            "type": "string",
            "readOnly": true
          },
          "framedprotocol": {
            "type": "string",
            "readOnly": true
          },
          "framedipaddress": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Admin Id",
            "readOnly": true,
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "Admin Username",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "Admin Password",
            "writeOnly": true,
            "example": "password"
          },
          "super": {
            "type": "boolean",
            "description": "True if Admin is a Super User, False Otherwise"
          },
          "Resellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reseller"
            }
          }
        }
      },
      "Audit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Audit Id",
            "readOnly": true,
            "example": "5bf82df5-8a50-4f69-8f0d-1791b03a6a9c"
          },
          "event": {
            "type": "string",
            "enum": [
              "CREATE",
              "EDIT",
              "DELETE"
            ],
            "description": "Audit Event:  * `CREATE` - Model Record Created\n  * `EDIT` - Model Record Edited\n  * `DELETE` - Model Record Deleted\n",
            "readOnly": true,
            "example": "CREATE"
          },
          "model": {
            "type": "string",
            "description": "Model Audit Record is For",
            "readOnly": true,
            "example": "User"
          },
          "entity_id": {
            "type": "integer",
            "description": "Model Record Id Audit Record is For",
            "readOnly": true,
            "example": 1
          },
          "request_id": {
            "type": "string",
            "readOnly": true,
            "example": "5bf82df5-2e28-492a-b732-1791b03a6a9c"
          },
          "json_object": {
            "type": "string",
            "description": "JSON Representation of Model Record after Audit Event",
            "readOnly": true,
            "example": {
              "User": {
                "id": "1",
                "username": "ABCDEFGHIJKLMNOPQRST",
                "password": "ABCDEFGHIJKLMNOPQRST",
                "base_speed_up": "60",
                "base_speed_down": "60",
                "session_limit": "1",
                "static_ip": null,
                "base_upload_limit": "250",
                "base_download_limit": "250",
                "lock": false,
                "pending": true,
                "reseller_id": "1",
                "status_id": "1",
                "deleted": false,
                "deleted_date": null,
                "usage": {
                  "login": 0,
                  "logintime": 0,
                  "up": 0,
                  "down": 0,
                  "total": 0
                },
                "session": [],
                "speed_up": "60",
                "speed_down": "60",
                "upload_limit": "250",
                "download_limit": "250"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "Admin Username responsible for the Audit Event",
            "readOnly": true,
            "example": "admin"
          },
          "source_id": {
            "type": "integer",
            "description": "Admin Id responsible for the Audit Event",
            "readOnly": true,
            "example": 1
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "DateTime when Audit Event occured",
            "readOnly": true,
            "example": "2018-10-01T00:00:00.000Z"
          },
          "AuditDeltas": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AuditDelta"
            }
          }
        }
      },
      "AuditDelta": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Audit Delta Id",
            "readOnly": true,
            "example": "5bf82df5-1c2c-45ec-8579-1791b03a6a9c"
          },
          "audit_id": {
            "type": "string",
            "description": "Audit Id the Audit Delta relates to",
            "readOnly": true,
            "example": "5bf82df5-8a50-4f69-8f0d-1791b03a6a9c"
          },
          "property_name": {
            "type": "string",
            "description": "Field Name the Audit Delta relates to",
            "readOnly": true,
            "example": "id"
          },
          "old_value": {
            "type": "string",
            "description": "Old Value of the Field before the Audit Event",
            "readOnly": true,
            "example": null
          },
          "new_value": {
            "type": "string",
            "description": "New Value of the Field after the Audit Event",
            "readOnly": true,
            "example": 1
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event Id",
            "readOnly": true,
            "example": 1
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "DateTime when the Event occured",
            "readOnly": true,
            "example": "2018-10-01T00:00:00.000Z"
          },
          "event_type_id": {
            "type": "integer",
            "description": "Id of the Event Type for which the Event is an Occurance",
            "readOnly": true,
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "description": "Id of the User to which the Event Relates",
            "readOnly": true,
            "example": 1
          }
        }
      },
      "EventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event Type Id",
            "readOnly": true,
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Event Type Name",
            "readOnly": true,
            "example": "user.download_limit_75"
          }
        }
      },
      "Nas": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "NAS Id",
            "readOnly": true,
            "example": 1
          },
          "nasname": {
            "type": "string",
            "format": "ipv4",
            "description": "NAS IP Address",
            "example": "1.1.1.1"
          },
          "shortname": {
            "type": "string",
            "description": "NAS Friendly Name",
            "example": "nas1"
          },
          "type": {
            "type": "string",
            "example": "other"
          },
          "ports": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "secret": {
            "type": "string",
            "description": "RADIUS NAS Secret",
            "example": "testing123"
          },
          "server": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "community": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "description": {
            "type": "string",
            "description": "NAS Friendly Description",
            "example": "RADIUS Client"
          }
        }
      },
      "RadiusAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "RADIUS Attribute Id",
            "readOnly": true,
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "description": "User Id the RADIUS Attribute is associated with",
            "example": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "radcheck",
              "radreply"
            ],
            "description": "RADIUS Attribute Type:  * `radcheck` - RADIUS Check Attribute\n  * `radreply` - RADIUS Reply Attribute\n",
            "example": "radreply"
          },
          "attribute": {
            "type": "string",
            "description": "RADIUS Attribute"
          },
          "op": {
            "type": "string",
            "description": "RADIUS Attribute Operator",
            "minLength": 1,
            "maxLength": 2,
            "example": ":="
          },
          "value": {
            "type": "string",
            "description": "RADIUS Attribute Value",
            "example": "test_pool"
          }
        }
      },
      "Reseller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Reseller Id",
            "readOnly": true,
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Reseller Name",
            "example": "Test Reseller"
          }
        }
      },
      "StaticIPRange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Static IP Range Id",
            "readOnly": true,
            "example": 1
          },
          "reseller_id": {
            "type": "integer",
            "description": "Reseller Id for the Reseller that the Static IP Range belongs to",
            "example": 1
          },
          "prefix": {
            "type": "string",
            "description": "Static IP Range Network Address",
            "example": "10.10.0.0"
          },
          "prefix_length": {
            "type": "string",
            "description": "Static IP Range Prefix Length",
            "example": 16
          },
          "inactive_retention_period": {
            "type": "integer",
            "description": "How many days a Static IP remains assigned to a User Account when the User Account is in an Inactive Status and not using the Static IP (-1 for indefinite)",
            "example": -1
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Status Id",
            "readOnly": true,
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Human Readable Status Name",
            "example": "Active"
          },
          "reseller_id": {
            "type": "integer",
            "description": "Reseller Id to which the Status belongs",
            "example": 1
          },
          "redirect_url": {
            "type": "string",
            "description": "URL to redirect a Users' HTTP requests to when they are in this Status",
            "nullable": true
          },
          "pool_name": {
            "type": "string",
            "description": "Router ip local pool name"
          },
          "static_override_pool": {
            "type": "boolean",
            "description": "Does a User's Static IP Address override the IP Pool"
          },
          "type": {
            "type": "string",
            "enum": [
              "active",
              "overcap"
            ],
            "nullable": true,
            "description": "Status Type:  * `active` - Place the User in this Status when their Data Usage no longer exceeds their Download Limit if they were in an overcap Status\n  * `overcap` - Place the User in this Status when their Data Usage exceeds their Download Limit if they were in an active Status\n",
            "example": "active"
          }
        }
      },
      "TransientPackage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Transient Package Id",
            "readOnly": true,
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "description": "User Id the Transient Package is associated with",
            "example": 1
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Transient Package Start Date/Timestamp",
            "example": "2018-10-01T00:00:00.000Z"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "Transient Package End Date/Timestamp",
            "example": "2018-11-30T00:00:00.000Z"
          },
          "precedence": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9,
            "description": "In the event of multiple Transient Packages in `Override` mode being applied to a User at the same time the Transient Package with the highest precedence will be applied",
            "example": 5
          },
          "mode": {
            "type": "string",
            "enum": [
              "Override",
              "Supplement"
            ],
            "description": "Transient Package Mode determines how the Transient Package Attributes (speed_up, speed_down, upload_limit, download_limit) are applied to a User:  * `Override` - Transient Package Attributes are used instead of the User\\'s base attributes (`base_speed_up`, `base_speed_down`, `base_upload_limit`, `base_download_limit`). The User\\'s base attributes are overridden with the values from the Transient Package\n  * `Supplement` - Transient Package Attributes are combined with the User's base attributes. The maximum value of `base_speed_up` and `speed_up` is used. The maximum value of `base_speed_down` and `speed_down` is used. The summation of the `upload_limit` and `base_upload_limit` is used. The summation of the `download_limit` and `base_download_limit` is used.\n"
          },
          "speed_up": {
            "type": "integer",
            "minimum": 1,
            "description": "Transient Package Upload Speed in Mbps",
            "example": 60
          },
          "speed_down": {
            "type": "integer",
            "minimum": 1,
            "description": "Transient Package Download Speed in Mbps",
            "example": 60
          },
          "upload_limit": {
            "type": "integer",
            "minimum": -1,
            "description": "Transient Package Upload Limit in GB (-1 for Unlimited)",
            "example": 250
          },
          "download_limit": {
            "type": "integer",
            "minimum": -1,
            "description": "Transient Package Download Limit in GB (-1 for Unlimited)",
            "example": 250
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User Id",
            "readOnly": true,
            "example": 1
          },
          "username": {
            "type": "string",
            "minLength": 20,
            "maxLength": 20,
            "description": "RADIUS Username",
            "example": "ABCDEFGHIJKLMNOPQRST"
          },
          "password": {
            "type": "string",
            "minLength": 20,
            "maxLength": 20,
            "description": "RADIUS Password",
            "example": "ABCDEFGHIJKLMNOPQRST"
          },
          "hashed_password": {
            "type": "boolean",
            "description": "RADIUS Password is a Crypt-Password",
            "example": false
          },
          "base_speed_up": {
            "type": "integer",
            "minimum": 1,
            "description": "Base User Upload Speed in Mbps",
            "example": 60
          },
          "base_speed_down": {
            "type": "integer",
            "minimum": 1,
            "description": "Base User Download Speed in Mbps",
            "example": 60
          },
          "session_limit": {
            "type": "integer",
            "description": "Maximum Number of Simultaneous Sessions User can have",
            "example": 1
          },
          "static_ip": {
            "type": "string",
            "format": "ipv4",
            "description": "IPv4 Static IP Address assiged to User",
            "nullable": true,
            "example": "1.1.1.1"
          },
          "base_upload_limit": {
            "type": "integer",
            "minimum": -1,
            "description": "Base Upload Limit in GB (-1 for Unlimited)",
            "example": 250
          },
          "base_download_limit": {
            "type": "integer",
            "minimum": -1,
            "description": "Base Download Limit in GB (-1 for Unlimited)",
            "example": 250
          },
          "lock": {
            "type": "boolean",
            "description": "If set to True will prevent the user status being changed. If set to False (default) the user status can be changed",
            "example": false
          },
          "pending": {
            "type": "boolean",
            "description": "True if changes have been made to the User that have not yet been applied to the RADIUS server, False otherwise",
            "readOnly": true,
            "example": false
          },
          "reseller_id": {
            "type": "integer",
            "description": "Id of the Reseller the User belongs to",
            "example": 1
          },
          "status_id": {
            "type": "integer",
            "description": "Id of the Status the User is currently Assigned",
            "example": 1
          },
          "usage": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "login": {
                "type": "integer",
                "description": "Number of User Logins for the Current Month",
                "readOnly": true,
                "example": 1
              },
              "logintime": {
                "type": "integer",
                "description": "Total Login Time in seconds for the User for the Current Month",
                "readOnly": true,
                "example": 60
              },
              "up": {
                "type": "integer",
                "description": "Total Upload Usage in GB for the User for the Current Month",
                "readOnly": true,
                "example": 10
              },
              "down": {
                "type": "integer",
                "description": "Total Download Usage in GB for the User for the Current Month",
                "readOnly": true,
                "example": 10
              },
              "total": {
                "type": "integer",
                "description": "Total Usage in GB for the User for the Current Month",
                "readOnly": true,
                "example": 20
              }
            }
          },
          "session": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "speed_up": {
            "type": "integer",
            "description": "User Upload Speed (after Transient Packages have been applied) in Mbps",
            "readOnly": true,
            "example": 60
          },
          "speed_down": {
            "type": "integer",
            "description": "User Download Speed (after Transient Packages have been applied) in Mbps",
            "readOnly": true,
            "example": 60
          },
          "upload_limit": {
            "type": "integer",
            "description": "User Upload Limit (after Transient Packages have been applied) in GB (-1 for Unlimited)",
            "readOnly": true,
            "example": 250
          },
          "download_limit": {
            "type": "integer",
            "description": "User Download Limit (after Transient Packages have been applied) in GB (-1 for Unlimited)",
            "readOnly": true,
            "example": 250
          },
          "Status": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ]
          },
          "TransientPackages": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransientPackage"
            }
          },
          "RadiusAttributes": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RadiusAttribute"
            }
          }
        }
      },
      "WebhookEndpoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Webhook Endpoint Id",
            "readOnly": true,
            "example": 1
          },
          "endpoint": {
            "type": "string",
            "description": "Webhook Server Address",
            "example": "https://example.com/webhook"
          },
          "reseller_id": {
            "type": "integer",
            "description": "Reseller Id for the Resller that the Webhook Endpoint belongs to. The Webhook Endpoint will only receive Events for Users belonging to this Reseller",
            "example": 1
          },
          "disabled": {
            "type": "boolean",
            "description": "True if the Webhook Endpoint is Enabled, False Otherwise",
            "example": true
          },
          "EventTypes": {
            "type": "array",
            "description": "Event Types of Events that will be sent to the Webhook Endpoint",
            "items": {
              "$ref": "#/components/schemas/EventType"
            }
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Webhook Id",
            "readOnly": true,
            "example": 1
          },
          "webhook_endpoint_id": {
            "type": "integer",
            "description": "Id of the Webhook Endpoint to which the Webhook belongs",
            "example": 1
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP Status Code returned by the Webhook Endpoint",
            "nullable": true,
            "example": 204
          },
          "request": {
            "type": "string",
            "description": "JSON Representation of the HTTP Request Body",
            "example": {
              "Events": [
                {
                  "id": "1",
                  "datetime": "2018-10-01 00:00:00",
                  "event_type_id": "1",
                  "user_id": "1"
                }
              ]
            }
          },
          "response": {
            "type": "string",
            "description": "Response returned by the Webhook Endpoint",
            "nullable": true,
            "example": null
          },
          "request_headers": {
            "type": "string",
            "description": "JSON Representation of the Webhook Request Headers",
            "example": {
              "Content-Type": "application\\/json",
              "Content-Length": 92,
              "User-Agent": "connexin-radius-api\\/3"
            }
          },
          "response_headers": {
            "type": "string",
            "description": "JSON Representation of the Webhook Response Headers",
            "nullable": true,
            "example": null
          },
          "success_1": {
            "type": "integer",
            "enum": [
              -1,
              "0 1"
            ],
            "description": "Webhook First Delivery Attempt Result:  * `-1` - Webhook Delivery Failed\n  * `0` - Webhook Delivery Not Yet Attempted\n  * `1` - Webhook Delivery Succeeded\n",
            "example": 0
          },
          "success_2": {
            "type": "integer",
            "enum": [
              -1,
              "0 1"
            ],
            "description": "Webhook Second Delivery Attempt Result:  * `-1` - Webhook Delivery Failed\n  * `0` - Webhook Delivery Not Yet Attempted\n  * `1` - Webhook Delivery Succeeded\n",
            "example": 0
          },
          "success_3": {
            "type": "integer",
            "enum": [
              -1,
              "0 1"
            ],
            "description": "Webhook Third Delivery Attempt Result:  * `-1` - Webhook Delivery Failed\n  * `0` - Webhook Delivery Not Yet Attempted\n  * `1` - Webhook Delivery Succeeded\n",
            "example": 0
          },
          "success_4": {
            "type": "integer",
            "enum": [
              -1,
              "0 1"
            ],
            "description": "Webhook Fouth Delivery Attempt Result:  * `-1` - Webhook Delivery Failed\n  * `0` - Webhook Delivery Not Yet Attempted\n  * `1` - Webhook Delivery Succeeded\n",
            "example": 0
          },
          "success_5": {
            "type": "integer",
            "enum": [
              -1,
              "0 1"
            ],
            "description": "Webhook Fifth Delivery Attempt Result:  * `-1` - Webhook Delivery Failed\n  * `0` - Webhook Delivery Not Yet Attempted\n  * `1` - Webhook Delivery Succeeded\n",
            "example": 0
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current Page Number"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum Number of Records displayed per Page"
          }
        }
      }
    }
  }
}